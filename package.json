{
  "name": "eicrud-monorepo",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:postgre": "cross-env TEST_CRUD_DB=postgre nest start",
    "start:test-ms": "concurrently -k -s='first' npm:start:ms-* npm:test:ms",
    "start:test-ms:proxy": "concurrently -k -s='first' npm:start:ms:proxy-* npm:test:ms:proxy",
    "start:ms-user": "cross-env CRUD_CURRENT_MS=user PORT=3005 nest start",
    "start:ms-melon": "cross-env CRUD_CURRENT_MS=melon PORT=3006 nest start",
    "start:ms-email": "cross-env CRUD_CURRENT_MS=email PORT=3007 nest start",
    "start:ms:proxy-entry": "cross-env TEST_CRUD_PROXY=true CRUD_CURRENT_MS=entry PORT=3004 nest start",
    "start:ms:proxy-user": "cross-env TEST_CRUD_PROXY=true CRUD_CURRENT_MS=user PORT=3005 nest start",
    "start:ms:proxy-melon": "cross-env TEST_CRUD_PROXY=true CRUD_CURRENT_MS=melon PORT=3006 nest start",
    "start:ms:proxy-email": "cross-env TEST_CRUD_PROXY=true CRUD_CURRENT_MS=email PORT=3007 nest start",
    "test:ms": "wait-on http-get://localhost:3005/crud/rdy && wait-on http-get://localhost:3006/crud/rdy && wait-on http-get://localhost:3007/crud/rdy && cross-env CRUD_CURRENT_MS=entry jest --runInBand --forceExit --testPathIgnorePatterns=client.super --testPathIgnorePatterns=-username",
    "test:ms:proxy": "wait-on http-get://localhost:3004/crud/rdy && wait-on http-get://localhost:3005/crud/rdy && wait-on http-get://localhost:3006/crud/rdy && wait-on http-get://localhost:3007/crud/rdy && cross-env CRUD_CURRENT_MS=entry TEST_CRUD_PROXY=true jest --testPathIgnorePatterns=traffic- --testPathIgnorePatterns=-username --testPathIgnorePatterns=client.super --runInBand --forceExit",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{core,client,shared,test,db_*}/**/*.ts\" --fix --ignore-pattern test/cli-app/** --ignore-pattern cli/templates/**",
    "test": "jest --forceExit --maxWorkers=50%",
    "test:postgre": "cross-env TEST_CRUD_DB=postgre jest --forceExit --maxWorkers=30%",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "generate:typedoc": "typedoc --plugin typedoc-plugin-markdown --out \"docs/Ξ Api\" && del-cli \"docs/Ξ Api/README.md\"",
    "clean": "del-cli **.js **.d.ts **.js.map !node_modules !**/node_modules",
    "clean:deep": "del-cli **.js **.d.ts **.js.map !node_modules !**/node_modules && del-cli **/package-lock.json && del-cli test/cli-app/** && del-cli core/node_modules shared/node_modules db_mongo/node_modules db_postgre/node_modules client/node_modules cli/node_modules",
    "prepare": "husky install",
    "setup:cli": " cd shared && npm run compile && cd ../cli && npm run compile && npm remove -g @eicrud/cli && npm i -g ./ && cd ..",
    "setup:tests": "npm i && npm run setup:cli && eicrud export dtos && eicrud export superclient && eicrud export openapi -o-jqs && npm run setup:oapi:client",
    "setup:oapi:client": "openapi-ts -i ./test/test_exports/eicrud-open-api.yaml -o ./test/oapi-client -c @hey-api/client-axios",
    "setup:typeconv": "cd test && typeconv -v -f ts -t oapi -o test_exports 'test_exports/**.ts' 'test_exports/**/*.ts' && cd .."
  },
  "dependencies": {
    "@eicrud/client": "file:client",
    "@eicrud/core": "file:core",
    "@eicrud/mongodb": "file:db_mongo",
    "@eicrud/postgresql": "file:db_postgre",
    "@eicrud/shared": "file:shared",
    "@hey-api/client-axios": "^0.2.2"
  },
  "devDependencies": {
    "@eicrud/cli": "file:cli",
    "@hey-api/openapi-ts": "^0.52.4",
    "@nestjs/cli": "^10.4.5",
    "@nestjs/schematics": "^10.1.4",
    "@nestjs/testing": "^10.4.1",
    "@types/bcrypt": "^5.0.2",
    "@types/jest": "^29.5.12",
    "@types/node": "20.11.19",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^7.0.2",
    "@typescript-eslint/parser": "^7.0.2",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "del-cli": "^5.1.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.2.1",
    "husky": "^8.0.0",
    "jest": "29.7.0",
    "lint-staged": "^15.2.9",
    "prettier": "^3.3.3",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.4",
    "ts-jest": "29.2.4",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "4.2.0",
    "typedoc": "^0.26.0",
    "typedoc-plugin-markdown": "^3.17.1",
    "typescript": "^5.5.4",
    "wait-on": "^7.2.0"
  },
  "rootDir": "test",
  "jest": {
    "testTimeout": 6000,
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "test",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^@eicrud/core/(.*)$": "<rootDir>/../core/$1",
      "^@eicrud/core$": "<rootDir>/../core",
      "^@eicrud/shared/(.*)$": "<rootDir>/../shared/$1",
      "^@eicrud/shared$": "<rootDir>/../shared"
    }
  }
}
