name: npm-publish
on:
  workflow_dispatch: 
  push:
    tags:
      - 'v*.*.*'
  # pull_request:
  #   branches: ['develop', 'main']
jobs:

  release-pretest:
    if: contains(github.ref_name, 'beta') == false
    runs-on: ubuntu-22.04
    timeout-minutes: 7
    services:
      mongodb:
        image: mongo:7.0
        ports:
        - 27017:27017
      postgres:
        image: postgres:16-bullseye
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Copy repository
        uses: actions/checkout@v3

      - name: Setup
        run: npm i && npm run setup:cli && eicrud export dtos -cc

      - name: Convert types
        run: npm i -g typeconv@2.3.1 && cd test &&  typeconv -v -f ts -t oapi -o test_exports 'test_exports/**.ts' 'test_exports/**/*.ts' && cd ..

      - name: Export oapi with types
        run: eicrud export openapi 

      - name: setup client, rename test files
        run: npm run setup:oapi:client && node -e "fs.renameSync('./test/client/client.oapi-types.spec.ts.skip', './test/client/client.oapi-types.spec.ts')" && node -e "fs.renameSync('./test/client/client.super.spec.ts', './test/client/client.super.spec.ts.skip')" 
      - name: Build
        run: npm run build

      - name: Mongodb tests
        run: npm run test:mongo

  release-test:
    if: contains(github.ref_name, 'beta') == false
    needs: release-pretest
    runs-on: ubuntu-22.04
    timeout-minutes: 16
    services:
      mongodb:
        image: mongo:7.0
        ports:
        - 27017:27017
      postgres:
        image: postgres:16-bullseye
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Copy repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm run setup:tests

      - name: Build
        run: npm run build

      - name: Mongodb tests
        run: npm run test:mongo

      - name: PostgreSQL tests
        run: npm run test:postgre

      - name: Microservices tests
        run: npm run start:test-ms

      - name: Microservices proxy tests
        run: npm run start:test-ms:proxy

  release-cli-test:
    if: contains(github.ref_name, 'beta') == false
    needs: release-test
    runs-on: ubuntu-22.04
    timeout-minutes: 8
    services:
      mongodb:
        image: mongo:7.0
        ports:
        - 27017:27017
      postgres:
        image: postgres:16-bullseye
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Copy repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: CLI mongo
        run: ./test/test-cli.sh mongo
        
      - name: CLI postgre
        run: ./test/test-cli.sh postgre

  publish-all:
    if: contains(github.ref_name, 'beta') == false
    needs: release-cli-test
    runs-on: ubuntu-22.04
    timeout-minutes: 7
    strategy:
      matrix:
        dir: ['shared', 'core', 'cli', 'client', 'db_mongo', 'db_postgre']
      max-parallel: 1
    permissions:
      contents: read
      id-token: write
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Set packages version
      working-directory: ./${{ matrix.dir }}
      run: TAG=${{ github.ref_name }} && npm version ${TAG#v} --no-git-tag-version && sed -i "s/\"@eicrud\/\(.\+\)\":.\+\"/\"@eicrud\/\1\":\ \"^${TAG#v}\"/g" ./package.json && cat ./package.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ github.event.inputs.version }}
    
    - name: Publish
      working-directory: ./${{ matrix.dir }}
      if: contains(github.ref_name, 'beta') == false
      run: npm run publish:package --provenance --access public 
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-all-beta:
    if: contains(github.ref_name, 'beta')
    runs-on: ubuntu-22.04
    timeout-minutes: 7
    strategy:
      matrix:
        dir: ['shared', 'core', 'cli', 'client', 'db_mongo', 'db_postgre']
      max-parallel: 1
    permissions:
      contents: read
      id-token: write
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Set packages version
      working-directory: ./${{ matrix.dir }}
      run: TAG=${{ github.ref_name }} && npm version ${TAG#v} --no-git-tag-version && sed -i "s/\"@eicrud\/\(.\+\)\":.\+\"/\"@eicrud\/\1\":\ \"^${TAG#v}\"/g" ./package.json && cat ./package.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ github.event.inputs.version }}

    - name: Publish beta
      working-directory: ./${{ matrix.dir }}
      if: contains(github.ref_name, 'beta')
      run: npm run publish:package --provenance --access public --tag beta
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
