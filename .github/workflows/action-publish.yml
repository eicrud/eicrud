name: npm-publish
on:
  workflow_dispatch: 
  push:
    tags:
      - 'v*.*.*'
  # pull_request:
  #   branches: ['develop', 'main']
jobs:
  release-test:
    runs-on: ubuntu-latest
    timeout-minutes: 16
    services:
      mongodb:
        image: mongo
        ports:
        - 27017:27017
      postgres:
        image: postgres
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
    steps:
      - name: Copy repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Mongodb tests
        run: npm run test

      - name: PostgreSQL tests
        run: npm run test:postgre

      - name: Microservices tests
        run: npm run start:test-ms

      - name: Microservices proxy tests
        run: npm run start:test-ms:proxy

  release-cli-test:
    needs: release-test
    runs-on: ubuntu-latest
    timeout-minutes: 8
    services:
      mongodb:
        image: mongo
        ports:
        - 27017:27017
      postgres:
        image: postgres
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
    steps:
      - name: Copy repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: CLI mongo
        run: ./test/test-cli.sh mongo
        
      - name: CLI postgre
        run: ./test/test-cli.sh postgre

  publish-all:
    needs: release-cli-test
    runs-on: ubuntu-latest
    timeout-minutes: 7
    strategy:
      matrix:
        dir: ['shared', 'core', 'cli', 'client', 'db_mongo', 'db_postgre']
      max-parallel: 1
    permissions:
      contents: read
      id-token: write
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
    # - uses: dorny/paths-filter@v3
    #   id: filter
    #   with:
    #     filters: |
    #       matched:
    #         - './${{ matrix.dir }}/package.json'

    - name: Set packages version
      working-directory: ./${{ matrix.dir }}
      run: TAG=${{ github.ref_name }} && npm version ${TAG#v} --no-git-tag-version && sed -i "s/\"@eicrud\/\(.\+\)\":.\+\"/\"@eicrud\/\1\":\ \"^${TAG#v}\"/g" ./package.json && cat ./package.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ github.event.inputs.version }}
    
    - name: Publish
      working-directory: ./${{ matrix.dir }}
      # if: steps.filter.outputs.matched == 'true'
      run: npm run publish:package --provenance --access public 
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
